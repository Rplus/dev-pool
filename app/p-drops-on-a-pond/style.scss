$count: 14;
$circle-size: 12em;
$duration: 380ms;
$rain-distance: $circle-size * 2;
$rain-size: 2px;

.ring {
  position: relative;
  flex: 1 0 0;
  margin: auto;
  transform: rotateX(60deg);
  transform-style: preserve-3d;

  &::before {
    content: "";
    display: block;
    padding-bottom: 100%;
  }

  &:hover {
    box-shadow: inset 0 0 30px rgba(#fff, .05);
  }

  &:hover *,
  &:hover *::before,
  &:hover *::after {
    animation-play-state: paused;
  }

  &:active *,
  &:active *::before,
  &:active *::after {
    animation-play-state: running;
  }
}

.raingdrops {
  position: absolute;
  top: calc(50% - #{$circle-size / 2});
  left: calc(50% - #{$circle-size / 2});
  width: $circle-size;
  height: $circle-size;
  transform-style: preserve-3d;
  pointer-events: none;

  @for $i from 1 through $count {
    &:nth-of-type(#{$i}) {
      transform: rotate(#{$i * 360deg / $count}) translateX(75%);

      &::before,
      &::after {
        animation-delay: ($i - 1) * $duration;
      }
    }
  }

  &::before,
  &::after {
    content: "";
    position: absolute;
    top: calc(50% - #{$rain-size / 2});
    left: 50%;
    width: $circle-size / 2;
    border-top: $rain-size solid;
    opacity: 0;
    transform-origin: 0% 50%;
    transform: rotateY(-90deg);
    animation: raindrops ($duration * $count) ease-in infinite;
  }

  &::after {
    animation: anti-raindrops ($duration * $count) ease-in infinite;
  }
}

.ripple {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 3px solid;
  border-radius: 50%;
  transform: scale(0);
  animation: ripple ($duration * $count) linear infinite;

  @for $i from 1 through $count {
    .raingdrops:nth-of-type(#{$i}) & {
      animation-delay: $i * $duration;
    }
  }
}

@keyframes raindrops {
  0% {
    opacity: 1;
    transform: rotateY(-90deg) translateX($rain-distance);
  }
  #{100% / $count} {
    transform: rotateY(-90deg) translateX(0) scaleX(1);
  }
  100%,
  #{1.15 * 100% / $count} {
    transform: rotateY(-90deg) translateX(0) scaleX(0);
  }
}

@keyframes anti-raindrops {
  0% {
    opacity: .3;
    transform: rotateY(90deg) translateX($rain-distance);
  }
  #{100% / $count} {
    transform: rotateY(90deg) translateX(0) scaleX(1);
  }
  100%,
  #{1.15 * 100% / $count} {
    transform: rotateY(90deg) translateX(0) scaleX(0);
  }
}

@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  30% {
    opacity: .75;
  }
  50%,
  100% {
    transform: none;
    opacity: 0;
  }
}

.box {
  display: flex;
  flex: 1;
  width: 100%;
  max-width: 40rem;
  margin: 0 auto;
  perspective: 400px;
  overflow: hidden;
}

/// reset

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  margin: 0;
  background-color: #16151d;
  color: #fff;
}

.intro {
  width: 90%;
  max-width: 40rem;
  padding-bottom: 1rem;
  margin: 0 auto 1em;
  padding-top: .5em;
  font-size: calc(1rem + 2vmin);
  text-transform: capitalize;
  border-bottom: 1px dashed rgba(#fff, .3);
  text-align: center;
  opacity: .3;

  small {
    display: block;
    opacity: .5;
    font-style: italic;
    text-transform: none;
  }
}

.info {
  margin: 0;
  padding: 1em;
  font-size: .9em;
  font-style: italic;
  font-family: serif;
  text-align: right;
  opacity: .5;

  a {
    color: inherit;
  }
}
