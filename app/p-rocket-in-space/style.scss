$bgc: #415265;
$rocket-point: 10;
$rocket-radius: 10vmin;
$rocket-pop-count: 20;
$rocket-pop-duration: 3s;

@import "trig";

body {
  margin: 0;
}

.space {
  position: relative;
  min-height: 100vh;
  overflow: hidden;
}

.star {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: -1;
  overflow: hidden;
  background: $bgc url("https://cdn.rawgit.com/Rplus/77ff4ba84ef8dfd8feb22d5a2212c52a/raw/6e8cc006eee5035e51aa0d385846b59a2d9a995a/earth.svg") no-repeat 100% 100%;
  background-size: auto 60%;

  // ref: http://codepen.io/Rplus/pen/GopaVZ
  &::before,
  &::after {
    $stars: ();
    $max: 3;

    @for $i from 0 to 150 {
      $stars: $stars, random(100) * 1vw random(100) * 1vh 1px (random($max) - 1) * -.5px;
    }

    content: "";
    position: absolute;
    width: $max * 1px;
    height: $max * 1px;
    box-shadow: $stars;
    border-radius: 1px;
    color: #fff;
    will-change: opacity, transform;

    transform: translateX(100vw);

    // be carefull performance
    animation:
      twinkling infinite 10s,
      rolling infinite 15s linear;

    @keyframes twinkling {
      0%,
      100% { opacity: 1; }
      50% { opacity: .3; }
    }

    @keyframes rolling {
      to { transform: none; }
    }
  }

  &::before {
    left: -100vw;
  }
}

.rocket {
  position: absolute;
  top: 20%;
  left: 20%;
  width: 304px;
  height: 177px;
  background-image: url("https://cloud.githubusercontent.com/assets/1808835/16202852/1d427da0-374a-11e6-9175-11a0933797df.png");
  animation: rocket-swing ($rocket-point * 2s) linear infinite alternate;

  @keyframes rocket-swing {
    @for $i from 0 through $rocket-point {
      #{$i * 100 / $rocket-point}% {
        // round-move
        // transform: translate3d($rocket-radius * sin($i * 360deg / $rocket-point), $rocket-radius * cos($i * 360deg / $rocket-point), 0);

        transform: translate3d($rocket-radius * sin(random($rocket-point) * 360deg / $rocket-point), $rocket-radius * cos(random($rocket-point) * 360deg / $rocket-point), 0);
      }
    }
  }
}

.rocket-pop {
  position: absolute;
  top: calc(50% - .5em);
  left: calc(-5% - .5em);
  width: 1em;
  height: 1em;
  margin-left: -12%;
  animation: rocket-pops $rocket-pop-duration ease-out infinite;
  background-color: #ccc;
  border-radius: 50%;

  @for $i from 1 through $rocket-pop-count {
    $rotate: (random(20) - 10) * 1deg;
    $left: (random(30) + 5) * -1vw;

    &:nth-of-type(#{$i}) {
      opacity: (random(40) + 30) / 100;
      font-size: (random(60) + 20) * 1px;
      top: (random(30) + 20) * 1%;
      left: $left;
      animation-delay: random($rocket-pop-count) * $rocket-pop-duration / $rocket-pop-count * -1;
      transform:
        rotate($rotate)
        translate3d(-$left, 0%, 0)
        scale((15 - random(8)) / 10);
    }
  }

  @keyframes rocket-pops {
    to {
      transform: none;
      opacity: 0;
    }
  }
}

// reset

body {
  margin: 0;
}

.intro {
  width: 90%;
  max-width: 30rem;
  padding-bottom: 1rem;
  margin: 0 auto 1em;
  padding-top: .5em;
  font-size: calc(1rem + 2vmin);
  text-transform: capitalize;
  font-style: italic;
  border-bottom: 1px dashed rgba(#fff, .3);
  text-align: center;
  color: #fff;

  small {
    display: block;
    opacity: .5;
    font-style: italic;
    text-transform: none;
  }
}

.info {
  position: fixed;
  bottom: 0;
  right: 0;
  margin: 0;
  padding: 1em;
  font-size: .9em;
  font-style: italic;
  font-family: serif;
  text-align: right;
  opacity: .7;
}
