$grid-width: 2em;
$grid-height: 2.5em;
$grid-offset: $grid-width * .3;
$grid-colors: #fff, #000;
$border-color: mix(nth($grid-colors, 1), nth($grid-colors, 2));

.stripe {
  height: $grid-height;
  margin-left: -.25 * $grid-width;
  border-top: 1px solid $border-color;
  border-bottom: 1px solid $border-color;
  background-color: #ccc;
  background-image: linear-gradient(to right, nth($grid-colors, 1) 50%, nth($grid-colors, 2) 50%);
  background-size: ($grid-width * 2) $grid-height;
  background-repeat: repeat-x;
  transition: background-position .5s linear;
  will-change: background-position;

  &:nth-of-type(4n+1) { background-position-x: -1 * $grid-offset; }
  &:nth-of-type(4n+3) { background-position-x:  1 * $grid-offset; }

  #reset:checked ~ .box &,
  .box:hover & {
    background-position: 0 0;
  }
}

.box {
}



///// common style

*,
*::before,
*::after {
  box-sizing: border-box;
}

body {
  margin: 0;
  text-align: center;
  font-family: serif;
}

.intro {
  width: 80%;
  max-width: 700px;
  margin-left: auto;
  margin-right: auto;
  padding-bottom: 1rem;
  border-bottom: 1px dashed #999;
  line-height: 1;
  color: #333;
}

.info {
  position: absolute;
  bottom: 0;
  right: 0;
  margin: .5em;
  padding: .5em;
  font-size: .8em;
  font-style: italic;
  text-align: right;
  background-color: rgba(#fff, .8);
  opacity: .8;

  a {
    color: inherit;
  }
}

// checkbox

#reset {
  position: absolute;
  opacity: 0;
  visibility: hidden;
}

.ctrl {
  position: absolute;
  left: 0;
  bottom: 0;
  margin: .5em;
  padding: .5em;
  background-color: rgba(#fff, .7);
}

label {
  display: block;
  margin-bottom: .3em;
  cursor: pointer;

  &::before {
    content: "v";
    display: inline-block;
    width: 1em;
    height: 1em;
    margin-right: .3em;
    border: 1px dotted #333;
    text-align: center;
    line-height: 1;
    vertical-align: baseline;
    color: transparent;
  }

  #reset:checked ~ .ctrl &[for="reset"] {
    &::before {
      color: inherit;
    }
  }
}
