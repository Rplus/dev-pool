$card-w: 12rem;
$card-h: 10rem;
$specie-gap: 1.5rem;
$pm-gap: 1.5rem;

$specie-count: 251;

$sprite-col: 15;
$sprite-row: ceil($specie-count / $sprite-col);

// $sprite-url: 'sprite-50x50-15col.jpg';
$sprite-url: 'https://images.weserv.nl/?url=i.imgur.com/qRxx65v.jpg&il'; // 50x50
$sprite-url: 'https://images.weserv.nl/?url=i.imgur.com/UPaKdec.jpg&il'; // 80x80

@mixin fill($dir: 'full', $type: absolute) {
  position: $type;
  @if $dir != 'bottom' { top: 0; }
  @if $dir != 'right' { left: 0; }
  @if $dir != 'left' { right: 0; }
  @if $dir != 'top' { bottom: 0; }
}

.loader {
  position: fixed;
  top: calc(50% - 15vmin);
  left: calc(50% - 15vmin);
  width: 30vmin;
  height: 30vmin;
  margin: auto;
  border-radius: 50%;
  border: 2.5em double;
  border-style: double dotted;
  animation: rotate 1.5s infinite;

  @keyframes rotate {
    to { transform: rotate(720deg); }
  }

  .is-loaded & {
    display: none;
  }
}

.pm-board {
  width: 60rem;
  max-width: 100%;
  margin: 0 auto;
  padding-top: 2rem;
}

.Specie {
  position: relative;
  min-height: $card-h + $specie-gap;
  margin-bottom: $specie-gap * 2;
  padding-bottom: $specie-gap;
  background-image: linear-gradient(90deg, transparent, rgba(#000, .3), transparent);
  background-size: 100% 1px;
  background-repeat: no-repeat;
  background-position-y: 100%;

  &:empty {
    display: none;
  }
}

.SpecieCard {
  width: $card-w;
  height: $card-h;
  display: none;

  &:nth-of-type(1) {
    position: sticky;
    top: 0;
    display: block;

    & + .PM {
      margin-top: -$card-h;
    }
  }

  > * {
    padding: .25em .5em;
    background-color: rgba(#fff, .1);
  }
}

.pm-id {
  position: absolute;
  top: 0;
  left: 0;
  width: 3rem;
  height: 3rem;
  line-height: 3rem;
  font-size: 1.25rem;
  text-align: center;
  padding: 0;
  background-color: rgba(#000, .05);
  border-radius: 0 50% 50%;
}

.pm-name {
  position: absolute;
  left: 0;
  bottom: 0;

  &::before {
    content: '' attr(data-name) '\A';
    opacity: .25;
    font-size: smaller;
    white-space: pre;

    .SpecieCard:hover & {
      opacity: .5;
    }
  }
}

.pm-avatar {
  z-index: -1;
  width: 100% * $sprite-col / $sprite-row;
  height: 100%;
  margin: 0 auto;
  opacity: .5;
  background-image: url(#{$sprite-url});
  background-repeat: no-repeat;
  background-size: $sprite-col * 100% $sprite-row * 100%;
  background-position:
    calc(var(--col-start) * 100% / #{$sprite-col - 1})
    calc(var(--row-start) * 100% / #{$sprite-row - 1});

  .SpecieCard:first-of-type & {
    position: sticky;
    top: 0;
  }

  .Specie:hover & {
    opacity: .75;
  }
}

.pm-baseStat {
  position: absolute;
  top: 0;
  right: 0;
  opacity: .25;

  .SpecieCard:hover & {
    opacity: .75;
  }
}

// PM

.PM {
  display: flex;
  align-items: center;
  margin-left: $card-w;
  margin-bottom: $pm-gap;
  white-space: nowrap;
}

.pm-data {
  width: 4em;
  line-height: 1.2;
  text-align: right;

  [data-prefix="Lv"] {
    opacity: .5;
  }

  .is-recent & {
    background-color: rgba(#ffc, .5);
  }
}

[data-prefix]::before {
  content: attr(data-prefix);
  font-size: smaller;
  opacity: .2;
  padding-right: .25em;
}

.pm-cp-bar {
  position: relative;
  flex-grow: 1;
  min-width: 5rem;
  height: 2em;
  margin: 0 .75rem;
  color: rgba(#c00, .15);

  .pm-board:not(.is-loaded) & {
    color: rgba(#000, .1);
  }

  &::before {
    content: '';
    position: absolute;
    top: -.25rem;
    // bottom: -.25rem;
    left: 0;
    right: 0;
    height: .5rem;
    opacity: 0;
    background-position: 0 0;
    background-repeat: no-repeat;
    background-image:
      linear-gradient(-90deg, rgba(#000, .3) 1px, transparent 0),
      linear-gradient(-90deg, rgba(#000, .3) 1px, transparent 0);
    background-size:
      80% 100%,
      90% 100%;
  }

  .Specie:hover &::before {
    opacity: 1;
  }

  $CPs: (
    --pm-cp40_all15,
    --pm-cpLvBest,
    --pm-cp40,
    --pm-cpLvMax,
    --pm-cp
  );

  > * {
    @include fill('left');

    background-color: currentColor;
    z-index: calc(var(--max-cp) - var(--cp));
    width: calc(var(--cp) / var(--max-cp) * 100%);

    @for $i from 1 through length($CPs) {
      &:nth-child(#{$i}) {
        --cp: var(nth($CPs, $i));
      }
    }

    &::before {
      @include fill('top');

      content: counter(cp);
      counter-reset: cp var(--cp);
      padding-right: .5rem;
      padding-top: 2rem;
      text-align: right;
      color: #000;
      opacity: 0;
      pointer-events: none;
      box-shadow: inset -4px 6px 5px -1px rgba(#000, .3);
    }

    &::after {
      content: attr(data-title);
      padding-left: .5rem;
      line-height: 2rem;
      font-size: 12px;
      color: #000;
      opacity: 0;
      pointer-events: none;
    }

    &:hover {
      &::before,
      &::after {
        opacity: .75;
      }
    }
  }
}

.pm-ads {
  width: 6rem;
  font-size: smaller;
  opacity: .3;
  color: #666;

  &::before {
    content: attr(data-ivpr) '%\a';
    font-size: larger;
    white-space: pre;
    color: #000;
  }

  .PM:hover & {
    opacity: 1;
  }
}

.pm-nickname {
  width: 10rem;
  position: relative;

  .is-recent & {
    background-color: rgba(#ffc, .5);
  }
}

.pm-info {
  position: absolute;
  top: 100%;
  left: 2em;
  z-index: 1;
  padding: .25em 1em;
  font-size: smaller;
  background-color: rgba(#ffc, .9);
  box-shadow: 0 0 3px;
  display: none;

  .pm-nickname:hover &,
  &:hover {
    display: block;
  }
}

.pm-time {
  opacity: .25;
  font-size: smaller;

  .PM:hover & {
    opacity: .5;
  }
}

.ctrl {
  position: fixed;
  right: 0;
  bottom: 0;
  display: flex;
  padding: 1em;
  padding-right: 0;
  background-color: #ff9;
  opacity: .25;

  &:hover {
    opacity: 1;
  }

  label {
    display: block;
    padding-right: 1em;
  }
}

label {
  cursor: pointer;
}

input[type="number"] {
  width: 3em;
  text-align: center;
}

h2.total {
  text-align: center;
}

/* reset */

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  font-family: Monaco, monospace;
}

h1 {
  text-align: center;
}
