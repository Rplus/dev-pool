$c-white: #fff;
$c-black: #000;
$sprite-size: 80px;
$dev: false;
$dev: true;

$pokeTypes: 'normal', 'fighting', 'flying', 'poison', 'ground', 'rock', 'bug', 'ghost', 'steel', 'fire', 'water', 'grass', 'electric', 'psychic', 'ice', 'dragon', 'dark', 'fairy';

// 455 x 1430 : 7x22 (65x65)
$sprite-src: 'https://images.weserv.nl/?url=veekun.com/static/pokedex/downloads/gold.png&w=1000&il';
// gen 2
$sprite-src: 'https://lh3.googleusercontent.com/Sg6LeWd8vqPoPpEaMaBoFX3Mn9v26PWnNPy95cYEfvT1p6vR_COxRJMwrpKwMT-WEbJKB1mfCDIX82ahv9Pt8RUauTZ8KSXl8910qyph46q5Oo-1b42_sr9-Ia3DKp44UyXpIQb-3jBBvL83ab02PCkLay_go-54vL7bANFCIxAb8o6X1l92pMUv026-550aQ4hDSn_MB9UeMtJ6qWnmC2oGxHc9N7XWNM-vAgTnnyUM8FwV2ozFidvCK0tWafJgxq56Ozo8u4lKSY5nO_iv0_4JZjVKNtDL0hdblKI_tWXB8i6kG294R9GmHB2Lk3tkQDRZr8ZmQkXn5X78WwexGNiupU0KCTPgLnOM9_tDeLOuok__UoLUks3dcJdm8DX1tDRwlRdqfV4lAGn7mw81d0wjvK0a1yDxmHrT1c_0Mw4VObl-MIIRhPKvXrAILVSKsnKhqjlOXYXikaDfgOLsD_hmcynWyDM6f00MS0rItB9S09hfGjSRNbFklHSXk3vGpnBi-Wm1fPtmoThJgB1JJaq8jVA9S_RmEekeM3SGatJTN7f6fSw1J95Fh6ez08X4zaEJUsnDiTEfojV6bA04ZQ_BkBk6qPOfWn4glgRwP7gcj4kiRG8nggZIMsOYpt2Sj-SkJuku5qvIh9d6S-C3rG9iylgnKLF2Uws=w1120-h728-no';
$sprite-grid: (20, 13);
// gen 3
$sprite-src: 'https://lh3.googleusercontent.com/aAXfL381irDIoHvnIfAxH5g-gM5kB9HvKjgb9irJElAnTXu5sG3WigmCQ6T-Rg_5uct2DKmft9Z7EI_hHMNlkHmUE3lPwyJJNVyBuUo9iwVjoWvTWssErjclWpQZgRXtVTuMTr6t6A=w1480-h947-no';
$sprite-grid: (25, 16);
@if $dev {
  // $sprite-src: 'icons-large-sprite.png';
}

.pokeMaxCP {
  --sprite-grid-col: nth($sprite-grid, 1);
  --sprite-grid-row: nth($sprite-grid, 2);
  // max-width: 70rem;
  margin: auto;
}

.pokeMaxCP__ctrl {
  max-width: 50rem;
  margin: auto;
  text-align: center;

  table {
    max-width: 90%;
    margin: 0 auto 2em;
  }

  tr {
    :first-child {
      text-align: right;
    }
  }

  td {
    width: auto;
    text-align: left;
    text-transform: capitalize;

    &::first-letter {
      font-weight: 900;
      color: $c-black;
    }

    &:first-child {
      color: rgba($c-black, .5);
    }

    &:last-child {
      width: 50%;
    }

    input {
      width: 100%;
    }
  }
}

.ctrlSort {
  margin-bottom: 2em;

  &::before {
    content: 'sort by';
    margin-right: .5em;
    font-style: italic;
    opacity: .5;
  }
}

.ctrlSort__btn {
  font-size: larger;

  &.is-active {
    background-color: rgba(#ff9, .5);

    &::after {
      content: attr(data-sort-dir);
    }
  }
}

.ctrlFilter--wrap {
  margin-bottom: 2em;
  padding: 0 1em;
}

.ctrlFilter__header {
  display: flex;
  width: 100%;
  justify-content: space-around;
  flex: 1 0 4rem;
  margin-bottom: 1em;
  font-style: italic;
  color: rgba($c-black, .5);
}

.ctrlFilter {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  text-align: start;
}

.ctrlFilter__label {
  position: relative;
  flex-basis: 5.5em;
  margin-left: 1vw;
  margin-right: 1vw;
  margin-bottom: .7em;
  transform-origin: 0 0;
  cursor: pointer;
  color: rgba($c-black, .8);

  &::before {
    content: '◎';
    display: inline-block;
    width: 1em;
    margin-left: .25em;
    margin-right: .25em;
    vertical-align: text-top;
    opacity: .5;
    font-size: smaller;
  }

  &:hover {
    color: lighten($c-black, 10%);
  }
}

%active-poke-filter {
  background-color: rgba($c-black, .1);

  &::before {
    content: '◉';
  }
}

%active-poke-info {
  display: unset;
}

@each $type in $pokeTypes {
  .ck-#{$type}:checked {
    & ~ .pokeMaxCP__ctrl .ctrlFilter__label[for="ck-#{$type}"] {
      @extend %active-poke-filter;
    }

    & ~ .pokeList {
      .poke[data-type*="#{$type}"] {
        @extend %active-poke-info;
      }
    }
  }
}

.pokeList {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax($sprite-size * 2, 1fr));
  margin: 0;
  padding: 0;
  // text-align: center;
  list-style-type: none;
}

%poke-avatar-clear {
  .poke__img {
    opacity: .7;

    @if $dev {
      // filter: unset;
    }
  }
}

.poke {
  position: relative;
  display: none;
  max-width: 20vw;
  margin: 1em;
  transition: opacity .3s;
  user-select: none;

  &::after {
    content: '#' attr(data-id);
    position: absolute;
    left: 0;
    bottom: 0;
    color: rgba($c-black, .2);
  }

  .poke__img {
    display: block;
    width: $sprite-size;
    height: $sprite-size;
    margin: auto;
    overflow: hidden;
    background: url($sprite-src) no-repeat;
    background-position: inherit;
    background-size:
      calc(var(--sprite-grid-col) * #{$sprite-size})
      calc(var(--sprite-grid-row) * #{$sprite-size});
    text-align: right;
    opacity: .3;
    letter-spacing: -.025em;
    will-change: opacity;
    transition: opacity .3s;

    @if $dev {
      will-change: filter, opacity;

      @media (pointer: fine) {
        opacity: .4;
        // filter: blur(2px);
      }
    }
  }

  &:hover {
    @extend %poke-avatar-clear;
  }

  // hack for align grids to left
  &:empty {
    display: inline-block;
    height: 0;
    margin-top: unset;
    margin-bottom: unset;
    visibility: hidden;
    overflow: hidden;
  }

  .pokeList:active & {
    opacity: .3;

    &.is-family-id-marked {
      @extend %poke-avatar-clear;

      opacity: 1;
    }
  }
}

.poke__name {
  position: absolute;
  right: 0;
  bottom: 0;
  padding: 0 .2em;
  box-shadow: inset 0 0 0 1px rgba($c-black, .3);
  background-color: rgba($c-white, .8);
  opacity: .5;
  font-size: smaller;
  will-change: opacity;
  transition: opacity .3s;

  .poke:hover & {
    opacity: 1;
  }
}

.poke__maxcp {
  position: absolute;
  top: 0;
  left: 0;
  font: 100 calc(1em + 2vmin) monospace;
  letter-spacing: -.03em;
  will-change: opacity;
  transition: all .3s;

  .poke:hover & {
    opacity: .7;
    text-shadow: 0 0 .25em rgba(#ff0, .5);
  }
}

.box {
  flex: 1;
}

/// reset

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  height: 100%;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100%;
  margin: 0;
  line-height: 1.4;
  background-color: $c-white;
  overflow-y: scroll;
}

.intro {
  width: 90%;
  max-width: 36rem;
  padding-bottom: 1rem;
  margin: 0 auto 1em;
  padding-top: .5em;
  font-size: calc(1rem + 2vmin);
  text-transform: capitalize;
  border-bottom: 1px dashed rgba(#000, .3);
  text-align: center;

  small {
    display: block;
    opacity: .5;
    font-style: italic;
    text-transform: none;
  }
}

.info {
  margin: 0;
  padding: 1em;
  font-size: .9em;
  font-style: italic;
  font-family: serif;
  text-align: right;
  opacity: .5;

  a {
    color: inherit;
  }
}

.sr-only {
  position: fixed;
  top: 0;
  left: 0;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}
